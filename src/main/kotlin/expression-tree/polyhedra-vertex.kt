//package kometa.expressionTree.examples
//
//import gl.*
//import kometa.expressionTree.*
//import kometa.kotlin.AST
//
//val globals = AST.Block(listOf(AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("uniform", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "uProjectionMatrix", AST.UserType(listOf(AST.SimpleUserType("mat4", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("uniform", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "uModelMatrix", AST.UserType(listOf(AST.SimpleUserType("mat4", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("uniform", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "uTargetFraction", AST.UserType(listOf(AST.SimpleUserType("float", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("uniform", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "uPrevFraction", AST.UserType(listOf(AST.SimpleUserType("float", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("uniform", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "uExpand", AST.UserType(listOf(AST.SimpleUserType("float", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("uniform", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "uCullMode", AST.UserType(listOf(AST.SimpleUserType("float", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("uniform", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "uCameraPosition", AST.UserType(listOf(AST.SimpleUserType("vec3", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("uniform", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "uNormalMatrix", AST.UserType(listOf(AST.SimpleUserType("mat3", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("attribute", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "aVertexPosition", AST.UserType(listOf(AST.SimpleUserType("vec3", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("attribute", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "aPrevVertexPosition", AST.UserType(listOf(AST.SimpleUserType("vec3", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("attribute", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "aVertexNormal", AST.UserType(listOf(AST.SimpleUserType("vec3", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("attribute", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "aPrevVertexNormal", AST.UserType(listOf(AST.SimpleUserType("vec3", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(AST.SingleAnnotation(null, AST.UserType(listOf(AST.SimpleUserType("varying", listOf()))))), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "vColorMul", AST.UserType(listOf(AST.SimpleUserType("float", listOf())))), listOf(), null, null, null)), AST.Statement(listOf(), AST.FunctionDeclaration(listOf(), listOf(), null, "fInterpolatedPosition", listOf(), AST.UserType(listOf(AST.SimpleUserType("vec3", listOf()))), listOf(), AST.BlockBody(AST.Block(listOf(AST.Statement(listOf(), AST.Return(AST.Additive(AST.Multiplicative(AST.NameExpression("aVertexPosition"), AST.MULT, AST.NameExpression("uTargetFraction")), AST.ADD, AST.Multiplicative(AST.NameExpression("aPrevVertexPosition"), AST.MULT, AST.NameExpression("uPrevFraction")))))))))), AST.Statement(listOf(), AST.FunctionDeclaration(listOf(), listOf(), null, "fInterpolatedNormal", listOf(), AST.UserType(listOf(AST.SimpleUserType("vec3", listOf()))), listOf(), AST.BlockBody(AST.Block(listOf(AST.Statement(listOf(), AST.Return(AST.Additive(AST.Multiplicative(AST.NameExpression("aVertexNormal"), AST.MULT, AST.NameExpression("uTargetFraction")), AST.ADD, AST.Multiplicative(AST.NameExpression("aPrevVertexNormal"), AST.MULT, AST.NameExpression("uPrevFraction")))))))))), AST.Statement(listOf(), AST.FunctionDeclaration(listOf(), listOf(), null, "fPosition", listOf(), AST.UserType(listOf(AST.SimpleUserType("vec4", listOf()))), listOf(), AST.BlockBody(AST.Block(listOf(AST.Statement(listOf(), AST.Return(AST.Multiplicative(AST.NameExpression("uModelMatrix"), AST.MULT, AST.PostfixUnaryExpression(AST.NameExpression("vec4"), listOf(AST.CallSuffix(listOf(), listOf(AST.ValueArgument(listOf(), null, AST.Additive(AST.PostfixUnaryExpression(AST.NameExpression("fInterpolatedPosition"), listOf(AST.CallSuffix(listOf(), listOf(), null))), AST.ADD, AST.Multiplicative(AST.PostfixUnaryExpression(AST.NameExpression("fInterpolatedNormal"), listOf(AST.CallSuffix(listOf(), listOf(), null))), AST.MULT, AST.NameExpression("uExpand"))), false), AST.ValueArgument(listOf(), null, AST.DoubleLiteral("1.0"), false)), null))))))))))), AST.Statement(listOf(), AST.FunctionDeclaration(listOf(), listOf(), null, "fFaceDirection", listOf(AST.ValueParameter(listOf(), "position", AST.UserType(listOf(AST.SimpleUserType("vec4", listOf()))), null), AST.ValueParameter(listOf(), "normal", AST.UserType(listOf(AST.SimpleUserType("vec3", listOf()))), null)), AST.UserType(listOf(AST.SimpleUserType("float", listOf()))), listOf(), AST.BlockBody(AST.Block(listOf(AST.Statement(listOf(), AST.Return(AST.PostfixUnaryExpression(AST.NameExpression("dot"), listOf(AST.CallSuffix(listOf(), listOf(AST.ValueArgument(listOf(), null, AST.Additive(AST.PostfixUnaryExpression(AST.NameExpression("position"), listOf(AST.IdentifierNavigationSuffix(AST.DOT, "xyz"))), AST.SUB, AST.NameExpression("uCameraPosition")), false), AST.ValueArgument(listOf(), null, AST.NameExpression("normal"), false)), null)))))))))), AST.Statement(listOf(), AST.FunctionDeclaration(listOf(), listOf(), null, "fNormal", listOf(), AST.UserType(listOf(AST.SimpleUserType("vec3", listOf()))), listOf(), AST.BlockBody(AST.Block(listOf(AST.Statement(listOf(), AST.Return(AST.Multiplicative(AST.NameExpression("uNormalMatrix"), AST.MULT, AST.PostfixUnaryExpression(AST.NameExpression("fInterpolatedNormal"), listOf(AST.CallSuffix(listOf(), listOf(), null)))))))))))))
//fun main() {
//    val sh = AST.Block(listOf(AST.Statement(listOf(), AST.PropertyDeclaration(listOf(), AST.VAL, listOf(), null, AST.SingleVariableDeclaration(listOf(), "position", null), listOf(), AST.ExpressionBody(AST.PostfixUnaryExpression(AST.NameExpression("fPosition"), listOf(AST.CallSuffix(listOf(), listOf(), null)))), null, null)), AST.Statement(listOf(), AST.DirectAssignment(AST.NameExpression("gl_Position"), AST.Multiplicative(AST.NameExpression("uProjectionMatrix"), AST.MULT, AST.NameExpression("position")))), AST.Statement(listOf(), AST.DirectAssignment(AST.NameExpression("vColorMul"), AST.IfExpression(AST.Equality(AST.NameExpression("uCullMode"), AST.EQEQ, AST.DoubleLiteral("0.0")), AST.Statement(listOf(), AST.DoubleLiteral("1.0")), AST.Statement(listOf(), AST.IfExpression(AST.Comparison(AST.Multiplicative(AST.PostfixUnaryExpression(AST.NameExpression("fFaceDirection"), listOf(AST.CallSuffix(listOf(), listOf(AST.ValueArgument(listOf(), null, AST.NameExpression("position"), false), AST.ValueArgument(listOf(), null, AST.PostfixUnaryExpression(AST.NameExpression("fNormal"), listOf(AST.CallSuffix(listOf(), listOf(), null))), false)), null))), AST.MULT, AST.NameExpression("uCullMode")), AST.GE, AST.DoubleLiteral("0.0")), AST.Statement(listOf(), AST.DoubleLiteral("1.0")), AST.Statement(listOf(), AST.DoubleLiteral("0.0")))))))))
//}
//
